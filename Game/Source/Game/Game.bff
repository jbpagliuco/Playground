// Playground Engine Constants
.PlaygroundBasePath                = '../../../PlaygroundEngine'
.PlaygroundProjectConfigPath       = '$PlaygroundBasePath$/Source/Lib/ProjectConfig'

// Game Constants
.GameBasePath                      = '../..'
.GameSourcePath                    = '$GameBasePath$/Source/Game'
.GameDataPath                      = '$GameBasePath$/Data'

// Project Constants
.ProjectName        = 'Game'
.ProjectBasePath    = '$GameSourcePath$'
.ProjectIncludePaths = {
    '.'
    'GeneratedCode'
    '../../../PlaygroundEngine/Source/Lib'
    '../../../PlaygroundEngine/Source/Lib/Core'
    '../../../PlaygroundEngine/Source/Lib/Core/GeneratedCode'
    '../../../PlaygroundEngine/Source/Lib/Engine'
    '../../../PlaygroundEngine/Source/Lib/Engine/GeneratedCode'
    '../../../PlaygroundEngine/Source/Lib/Renderer'
    '../../../PlaygroundEngine/Source/Lib/Renderer/GeneratedCode'
    '../../../PlaygroundEngine/Source/Vendor/CppRefl/include'
}
.ProjectLibraryPaths = {
    '$PlaygroundBasePath$/Source/Vendor'
}
.ProjectBinaryExtension = 'exe'

#include "../../../PlaygroundEngine/Source/Lib/ProjectConfig/Common.bff"
#include "../../../PlaygroundEngine/Source/Lib/ProjectConfig/PlatformConfig_x64.bff"
#include "../../../PlaygroundEngine/Source/Lib/ProjectConfig/Reflection.bff"

.AllConfigs = .Allx64Configs
.AllVCXProjectConfigs = .Allx64VCXProjectConfigs

.AllProjectConfigs = {}
ForEach(.config in .AllVCXProjectConfigs) {
    .ProjectConfig = [
        Using(.config)

        .LocalDebuggerCommand           = '^$(ProjectDir)$ExeOutputRelativeToProject$'
        .LocalDebuggerWorkingDirectory  = .GameBasePath
    ]

    ^AllProjectConfigs + .ProjectConfig
}

Copy('$ProjectName$-Copy-DLLs')
{
    .Source = .x64DLLs
    .Dest = .GameBasePath
}

ForEach(.config in .AllReflConfigs) {
    Using(.config)

    Exec('$TargetName$-refl') { 
        .OldExecArguments = .ExecArguments
        .ExecArguments = '-registries '
        .ExecArguments + '../../../PlaygroundEngine/Source/Lib/Core/CoreReflection_$Config$.refl;'
        .ExecArguments + '../../../PlaygroundEngine/Source/Lib/Engine/EngineReflection_$Config$.refl;'
        .ExecArguments + '../../../PlaygroundEngine/Source/Lib/Renderer/RendererReflection_$Config$.refl '
        .ExecArguments + .OldExecArguments

        .PreBuildDependencies = {
            'Core-$Config$-refl'
            'Renderer-$Config$-refl'
            'Engine-$Config$-refl'
        }
    }
}

// Executables
ForEach(.config in .AllConfigs) {
    Using(.config)

    ObjectList('$TargetName$-lib') {
        .PreBuildDependencies = '$ProjectName$-$Config$-refl'
    }

    Executable('$TargetName$-exe')
    { 
        .Libraries = {
            'Core-$Platform$-$Config$-$RenderConfig$'
            'Renderer-$Platform$-$Config$-$RenderConfig$'
            'Engine-$Platform$-$Config$-$RenderConfig$'
            '$TargetName$-lib'
        }
        // .LinkerLinkObjects = true
    }
}

ForEach(.config in .AllConfigs) {
    Using(.config)

    Alias('$TargetName$') {
        .Targets = {
            '$ProjectName$-$Config$-refl'
            '$TargetName$-exe',
            '$ProjectName$-Copy-DLLs',
        }
    }
}

// VCXProject
VCXProject('$ProjectName$-proj')
{
    .ProjectOutput          = '$ProjectBasePath$/$ProjectName$.vcxproj'
    .ProjectInputPaths      = { '$ProjectBasePath$' }
    .ProjectConfigs         = .AllProjectConfigs
}

// GameData VCXProject
VCXProject('GameData-proj')
{
    .ProjectOutput          = '$GameDataPath$/GameData.vcxproj'
    .ProjectInputPaths      = { '$GameDataPath$' }
    .ProjectConfigs         = .AllVCXProjectConfigs
    
    .ProjectAllowedFileExtensions = {
        '*.xml'
        
        '*.matx'
        '*.shaderx'
        '*.hlsl'
        '*.hlsli'

        '*.texx'
        '*.rtx'
        '*.skyx'
        '*.dds'
        
        '*.meshx'
        '*.obj'
        '*.fbx'
    }
}

// Reflection project (ideally this would just hook into the normal build process, but it seems to be much more complicated than I'd hoped).
Alias('Debug-refl')
{
    .Targets = {
        'Core-Debug-refl'
        'Renderer-Debug-refl'
        'Engine-Debug-refl'
        'Game-Debug-refl'
    }
}
Alias('Release-refl')
{
    .Targets = {
        'Core-Release-refl'
        'Renderer-Release-refl'
        'Engine-Release-refl'
        'Game-Release-refl'
    }
}

.GameReflectionProjectConfigs = { }
ForEach(.config in .AllVCXProjectConfigs) {
    .Config = [
        Using(.config)
        .ProjectBuildCommand        = '$FBuildBaseCommand$ -clean -verbose "$RealConfig$-refl"'
        .ProjectRebuildCommand      = '$FBuildBaseCommand$ -clean "$RealConfig$-refl"'
        .ProjectCleanCommand        = '$FBuildBaseCommand$ -clean "$RealConfig$-refl"'
    ]
    ^GameReflectionProjectConfigs + .Config
}
VCXProject('GameReflection-proj')
{
    .ProjectOutput          = '$ProjectBasePath$/GameReflection.vcxproj'
    .ProjectInputPaths      = { '$ProjectBasePath$' }
    .ProjectConfigs         = .GameReflectionProjectConfigs
}

// Solution
.BuildSolutionProjectConfigs = { }
ForEach(.config in .AllProjectConfigs) {
    .Config = [
        Using(.config)
            .ProjectBuildCommand        = '$FBuildBaseCommand$ "sln"'
            .ProjectRebuildCommand      = '$FBuildBaseCommand$ -clean "sln"'
            .ProjectCleanCommand        = '$FBuildBaseCommand$ -clean "sln"'
    ]
    ^BuildSolutionProjectConfigs + .Config
}
VCXProject('RebuildSolution-proj')
{
    .ProjectOutput      = '$ProjectBasePath$/RebuildSolution.vcxproj'
    .ProjectInputPaths  = { '$ProjectBasePath$' }
    .ProjectConfigs     = .BuildSolutionProjectConfigs
}

VSSolution('Playground-sln')
{
    .SolutionName       = 'Playground'
    .SolutionBasePath   = '$GameSourcePath$/'

    .SolutionOutput     = '$SolutionBasePath$/$SolutionName$.sln'

    .SolutionConfigs    = { }
    ForEach(.platform in .AllPlatformNames) {
        ForEach(.config in .AllConfigNames) {
            ForEach(.renderConfig in .AllRenderConfigNames) {
                .SolutionConfig = [ 
                    .Platform = .platform 
                    .Config = '$config$-$renderConfig$'
                    .SolutionPlatform = '$platform$-$renderConfig$'
                    .SolutionConfig = .config
                ]
                ^SolutionConfigs + .SolutionConfig
            }
        }
    }

    .SolutionProjects = {
        'Game-proj'
        'GameData-proj'
        'GameReflection-proj'
        'RebuildSolution-proj'
    }

    .EngineFolder = [
        .Path       = 'Engine Libraries'
        .Projects   = { 
            'Core-proj'
            'Engine-proj'
            'EngineData-proj'
            'ProjectConfig-proj'
            'Renderer-proj'
        }
    ]
    .SolutionFolders = { .EngineFolder }
            
    .SolutionBuildProject = 'Game-proj'
}


// All
//------------------------------------------------------------------------------
Alias( 'sln' ) { .Targets = { 'Playground-sln' } }