// This file contains configuration for the x64 platform.
//
// The following variables must be defined prior to including this file:
//  .ProjectName - The name of this project.
//  .PlaygroundProjectConfigPath - Path to the playground ProjectConfig folder.

.PlaygroundBasePath                = '../../..'
.PlaygroundProjectConfigPath       = '$PlaygroundBasePath$/Source/Lib/ProjectConfig'

#include "Common.bff"

.x64Libraries = {
    'kernel32.lib'
    'user32.lib'
    'gdi32.lib'
    'winspool.lib'
    'comdlg32.lib'
    'advapi32.lib'
    'shell32.lib'
    'ole32.lib'
    'oleaut32.lib'
    'uuid.lib'
    'odbc32.lib'
    'odbccp32.lib'
}

.x64DLLs = {
    '$PlaygroundVendorPath$/PhysX/bin/win.x86_64.vc141.mt/debug/PhysX_64.dll'
    '$PlaygroundVendorPath$/PhysX/bin/win.x86_64.vc141.mt/debug/PhysXCommon_64.dll'
    '$PlaygroundVendorPath$/PhysX/bin/win.x86_64.vc141.mt/debug/PhysXDevice64.dll'
    '$PlaygroundVendorPath$/PhysX/bin/win.x86_64.vc141.mt/debug/PhysXFoundation_64.dll'
}

// Relative to the vendor path (need to include this before the windows SDK)
.DirectXIncludePath = 'DirectX/include/directx'
.DirectXIncludePathFull = '$PlaygroundVendorPath$/DirectX/include/directx'

.VendorIncludePaths = {
    'CppRefl/include'
    .DirectXIncludePath
    'PhysX/include'
}

.CppReflDebugLibraryPath      = '$PlaygroundVendorPath$/CppRefl/Lib/debug'
.CppReflReleaseLibraryPath    = '$PlaygroundVendorPath$/CppRefl/Lib/release'
.CppReflLibraries             = { 'CppRefl.lib' }

.DirectXTKDebugLibraryPath      = '$PlaygroundVendorPath$/DirectXTK/Lib/x64/debug'
.DirectXTKReleaseLibraryPath    = '$PlaygroundVendorPath$/DirectXTK/Lib/x64/release'
.DirectXTKLibraries             = { 'directxtk.lib' }

.DirectXTK12DebugLibraryPath      = '$PlaygroundVendorPath$/DirectXTK12/Lib/x64/debug'
.DirectXTK12ReleaseLibraryPath    = '$PlaygroundVendorPath$/DirectXTK12/Lib/x64/release'
.DirectXTK12Libraries             = { 'directxtk12.lib' }

.PhysXDebugLibraryPath      = '$PlaygroundVendorPath$/PhysX/bin/win.x86_64.vc141.mt/debug'
.PhysXReleaseLibraryPath    = '$PlaygroundVendorPath$/PhysX/bin/win.x86_64.vc141.mt/release'
.PhysXLibraries = {
    'PhysX_64.lib'
    'PhysXCommon_64.lib'
    'PhysXFoundation_64.lib'
    'PhysXExtensions_static_64.lib'
}

.DebugLibraryPaths = {
    '$CppReflDebugLibraryPath$'
    '$DirectXTKDebugLibraryPath$'
    '$PhysXDebugLibraryPath$'
}

.ReleaseLibraryPaths = {
    '$CppReflReleaseLibraryPath$'
    '$DirectXTKReleaseLibraryPath$'
    '$PhysXReleaseLibraryPath$'
}

.LibrariesArray = .x64Libraries
                + .PhysXLibraries
                + .DirectXTKLibraries
                + .CppReflLibraries

// Base config for x64 platform
.x64BaseConfig = [
    Using(.BaseConfig)

    .Platform           = 'x64'

    .Compiler           = 'Compiler-VS2019-x64'
    .CompilerOptions    = '%1 /Fo%2 /c /Z7 /EHsc /std:c++17'

    .Librarian          = '$VSLibrarianExe$'
    .LibrarianOptions   = '/NODEFAULTLIB /OUT:%2 %1'

    .Linker             = '$VSLinkerExe$'
    .LinkerOptions      = ' /OUT:"%2"'     // Output
                        + ' "%1"'          // Input
                        + ' /WX'           // Warnings as errors
                        + ' /NOLOGO'       // No linker spam
                        + ' /DEBUG'        // Keep debug info when linking
                        //+ ' /NODEFAULTLIB' // We'll specify the libs explicitly
                        + ' /LIBPATH:"$WindowsSDKBasePath$/Lib"'
                        + ' /LIBPATH:"$VSBasePath$/VC/lib"'


    .DefinesArray           + { 'CORE_BFF_PLATFORM_PRIVATE_PC=1' }
    .IncludesArray          + .VSIncPaths + .DirectXIncludePathFull + .WindowsKitsIncPaths
    .ProjectIncludePaths    + { '.', '..' }
    .LibraryPathsArray      + { .WindowsSystem32Path } + .VSLibPaths + .WindowsKitsLibPaths
]

// x64 Debug Configuration
.x64DebugConfig = [
    Using(.x64BaseConfig)
    Using(.DebugBaseConfig)

    .DefinesArray + .ConfigDefinesArray
    .LibraryPathsArray + .DebugLibraryPaths
    .CompilerOptions + ' /MDd'
]

// x64 Release Configuration
.x64ReleaseConfig = [
    Using(.x64BaseConfig)
    Using(.ReleaseBaseConfig)

    .DefinesArray + .ConfigDefinesArray
    .LibraryPathsArray + .ReleaseLibraryPaths
    .CompilerOptions + ' /MD'
]

// x64 DirectX 11 Configuration
.x64DX11Config = [
    Using(.DX11BaseConfig)

    .RenderConfigIncludes = {
        'DirectXTK/include'
    }
]

.x64DX11DebugConfig = [
    Using(.x64DebugConfig)
    Using(.x64DX11Config)

    .RenderConfigLibPaths = {
        '$DirectXTKDebugLibraryPath$'
    }
]

.x64DX11ReleaseConfig = [
    Using(.x64ReleaseConfig)
    Using(.x64DX11Config)

    .RenderConfigIncludes = {
        '$DirectXTKReleaseLibraryPath$'
    }
]

// x64 DirectX 12 Configuration
.x64DX12Config = [
    Using(.DX12BaseConfig)

    .RenderConfigIncludes = {
        'DirectXTK12/include'
    }
]

.x64DX12DebugConfig = [
    Using(.x64DebugConfig)
    Using(.x64DX12Config)

    .RenderConfigLibPaths = {
        '$DirectXTK12DebugLibraryPath$'
    }
]

.x64DX12ReleaseConfig = [
    Using(.x64ReleaseConfig)
    Using(.x64DX12Config)

    .RenderConfigIncludes = {
        '$DirectXTK12ReleaseLibraryPath$'
    }
]

// List of x64 base configs
.x64Configs = { 
    .x64DX11DebugConfig, .x64DX11ReleaseConfig,
    .x64DX12DebugConfig, .x64DX12ReleaseConfig
}

.Allx64Configs = { }
ForEach(.baseConfig in .x64Configs) {
    .Config = [
        Using(.baseConfig)
                
        .TargetName = '$ProjectName$-$Platform$-$Config$-$RenderConfig$'

        .DefinesArray + .RenderConfigDefinesArray
        #include "CreateDefineStrings.bff"
        .CompilerOptions + .Defines

        .SearchPaths = .IncludesArray + .ProjectIncludePaths
        ForEach(.include in .SearchPaths) {
            ^IncludeSearchPath + '$include$;'
        }

        ForEach(.include in .ProjectIncludePaths) {
            ^IncludesArray + '$ProjectBasePath$/$include$'
        }
        #include "CreateIncludeStrings.bff"
        .CompilerOptions + .Includes

        #include "CreateLibraryPathStrings.bff"
        .LinkerOptions + .LibraryPaths

        .LibrariesString = ''
        #include "CreateLibraryStrings.bff"
        .LinkerOptions + .LibrariesString

        .ExeOutputRelativeToProject = 'Output/$Platform$-$RenderConfig$/$Config$/$ProjectName$.exe'
        .ExeOutput                  = '$ProjectBasePath$/$ExeOutputRelativeToProject$'

        .CompilerInputPath      = '$ProjectBasePath$'
        .CompilerOutputPath     = '$ProjectBasePath$/Output/$Platform$-$RenderConfig$/$Config$'
        .LibrarianOutput        = '$ProjectBasePath$/Output/$Platform$-$RenderConfig$/$Config$/$ProjectName$.lib'
        .LinkerOutput           = .ExeOutput
    ]

    ^Allx64Configs + .Config
}
    
.Allx64VCXProjectConfigs = { }
ForEach(.baseConfig in .Allx64Configs) {
    .Config = [
        Using(.baseConfig)

        .Platform                   = '$Platform$'
        .RealConfig                 = .Config
        .Config                     = '$Config$-$RenderConfig$'
        .ProjectInputPaths          = { '$ProjectBasePath$' }
        .PreprocessorDefinitions    = '$PreprocessorDefinitions$'
        .ProjectBuildCommand        = '$FBuildBaseCommand$ "$TargetName$"'
        .ProjectRebuildCommand      = '$FBuildBaseCommand$ -clean "$TargetName$"'
        .ProjectCleanCommand        = '$FBuildBaseCommand$ -clean "$TargetName$"'
        .PlatformToolset            = 'v142'
    ]
    ^Allx64VCXProjectConfigs + .Config
}